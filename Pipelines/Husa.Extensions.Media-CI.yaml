pr:
  branches:
    include:
      - master
  paths:
    include:
      - Husa.Extensions.Media

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - Husa.Extensions.Media

pool:
  vmImage: windows-latest

variables:
- group: homesusa.husa.extensions.global
- name: isPullRequest
  value: $[eq(variables['Build.Reason'], 'PullRequest')]

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudHomesUSA'
    organization: 'homesusa'
    scannerMode: 'MSBuild'
    projectKey: 'Husa_Extensions.Media'
    projectName: 'Husa.Extensions.Media'
    extraProperties: |
      sonar.exclusions=**/obj/**,**/*.dll
      sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
- task: NuGetAuthenticate@1
  inputs:
   forceReinstallCredentialProvider: true
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/Husa.Extensions.Media.csproj'
    restoreArguments: '/property:Configuration=$(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/Husa.Extensions.Media.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
- task: DotNetCoreCLI@2
  condition: ne(variables.isPullRequest, true)
  inputs:
    command: 'pack'
    packagesToPack: '**/Husa.Extensions.Media.csproj'
    versioningScheme: 'off'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'
  condition: and(succeededOrFailed(), ne(variables.isPullRequest, true))
